/*
 * Copyright (c) 2000, 2020, Oracle and/or its affiliates.
 *
 * Licensed under the Universal Permissive License v 1.0 as shown at
 * http://oss.oracle.com/licenses/upl.
 */
#include "coherence/lang/compatibility.hpp"

#if defined(COH_OS_DARWIN) && defined(COH_CC_GNU)
    #include "private/coherence/native/gcc/GccABI.hpp"
    #include "private/coherence/native/gcc/GccAtomic32.hpp"
    #include "private/coherence/native/gcc/GccAtomic64.hpp"
    #include "private/coherence/native/generic/GenericIEEE754Float.hpp"
    #include "private/coherence/native/glibc/GlibcBacktrace.hpp"
    #include "private/coherence/native/posix/PosixCondition.hpp"
    #include "private/coherence/native/posix/PosixDynamicLibrary.hpp"
    #include "private/coherence/native/posix/PosixInetHelper.hpp"
    #include "private/coherence/native/posix/PosixMutex.hpp"
    #include "private/coherence/native/posix/PosixPID.hpp"
    #include "private/coherence/native/posix/PosixSocket.hpp"
    #include "private/coherence/native/posix/PosixThread.hpp"
    #include "private/coherence/native/posix/PosixThreadDumpHandler.hpp"
    #include "private/coherence/native/posix/PosixThreadLocal.hpp"
    #include "private/coherence/native/posix/PosixTime.hpp"
    #include "private/coherence/native/posix/PosixUser.hpp"
#elif defined(COH_OS_LINUX) && defined(COH_CC_GNU)
    #include "private/coherence/native/gcc/GccABI.hpp"
    #include "private/coherence/native/gcc/GccAtomic32.hpp"
    #include "private/coherence/native/gcc/GccAtomic64.hpp"
    #include "private/coherence/native/generic/GenericIEEE754Float.hpp"
    #include "private/coherence/native/glibc/GlibcBacktrace.hpp"
    #include "private/coherence/native/posix/PosixCondition.hpp"
    #include "private/coherence/native/posix/PosixDynamicLibrary.hpp"
    #include "private/coherence/native/posix/PosixInetHelper.hpp"
    #include "private/coherence/native/posix/PosixMutex.hpp"
    #include "private/coherence/native/posix/PosixPID.hpp"
    #include "private/coherence/native/posix/PosixSocket.hpp"
    #include "private/coherence/native/posix/PosixThread.hpp"
    #include "private/coherence/native/posix/PosixThreadDumpHandler.hpp"
    #include "private/coherence/native/posix/PosixThreadLocal.hpp"
    #include "private/coherence/native/posix/PosixTime.hpp"
    #include "private/coherence/native/posix/PosixUser.hpp"
#elif defined(COH_OS_LINUX) && defined(COH_CC_SUN)
    #define  __USE_UNIX98 // needed for pthread.h
    #include "private/coherence/native/gcc/GccAtomic32.hpp"
    #include "private/coherence/native/gcc/GccAtomic64.hpp"
    #include "private/coherence/native/generic/GenericIEEE754Float.hpp"
    #include "private/coherence/native/generic/GenericBacktrace.hpp"
    // TODO  "private/coherence/native/glibc/GlibcBacktrace.hpp"
    #include "private/coherence/native/posix/PosixCondition.hpp"
    #include "private/coherence/native/posix/PosixDynamicLibrary.hpp"
    #include "private/coherence/native/posix/PosixInetHelper.hpp"
    #include "private/coherence/native/posix/PosixMutex.hpp"
    #include "private/coherence/native/posix/PosixPID.hpp"
    #include "private/coherence/native/posix/PosixSocket.hpp"
    #include "private/coherence/native/posix/PosixThread.hpp"
    #include "private/coherence/native/posix/PosixThreadDumpHandler.hpp"
    #include "private/coherence/native/posix/PosixThreadLocal.hpp"
    #include "private/coherence/native/posix/PosixTime.hpp"
    #include "private/coherence/native/posix/PosixUser.hpp"
    #include "private/coherence/native/sunpro/SunProABI.hpp"
#elif defined(COH_OS_SOLARIS) && defined(COH_CC_SUN)
    #include "private/coherence/native/generic/GenericIEEE754Float.hpp"
    #include "private/coherence/native/glibc/GlibcBacktrace.hpp"
    #include "private/coherence/native/posix/PosixCondition.hpp"
    #include "private/coherence/native/posix/PosixDynamicLibrary.hpp"
    #include "private/coherence/native/posix/PosixInetHelper.hpp"
    #include "private/coherence/native/posix/PosixMutex.hpp"
    #include "private/coherence/native/posix/PosixPID.hpp"
    #include "private/coherence/native/posix/PosixSocket.hpp"
    #include "private/coherence/native/posix/PosixThread.hpp"
    #include "private/coherence/native/posix/PosixThreadDumpHandler.hpp"
    #include "private/coherence/native/posix/PosixThreadLocal.hpp"
    #include "private/coherence/native/posix/PosixTime.hpp"
    #include "private/coherence/native/posix/PosixUser.hpp"
    #include "private/coherence/native/solaris/SolarisAtomic32.hpp"
    #include "private/coherence/native/solaris/SolarisAtomic64.hpp"
    #include "private/coherence/native/sunpro/SunProABI.hpp"
#elif defined(COH_OS_WINDOWS) && defined(COH_CC_MSVC)
    #define  _WIN32_WINNT 0x500 // utilize Win2K and earlier APIs
    #include "private/coherence/native/generic/GenericIEEE754Float.hpp"
    #include "private/coherence/native/posix/PosixInetHelper.hpp"
    #include "private/coherence/native/windows/WindowsAtomic32.hpp"
    #include "private/coherence/native/windows/WindowsAtomic64.hpp"
    #include "private/coherence/native/windows/WindowsABI.hpp"
    #include "private/coherence/native/windows/WindowsBacktrace.hpp"
    #include "private/coherence/native/windows/WindowsCondition.hpp"
    #include "private/coherence/native/windows/WindowsDynamicLibrary.hpp"
    #include "private/coherence/native/windows/WindowsMutex.hpp"
    #include "private/coherence/native/windows/WindowsPID.hpp"
    #include "private/coherence/native/windows/WindowsSocket.hpp"
    #include "private/coherence/native/windows/WindowsThread.hpp"
    #include "private/coherence/native/windows/WindowsThreadDumpHandler.hpp"
    #include "private/coherence/native/windows/WindowsThreadLocal.hpp"
    #include "private/coherence/native/windows/WindowsTime.hpp"
    #include "private/coherence/native/windows/WindowsUser.hpp"
#else
    #error Unsupported Coherence build environment
#endif
